<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://camel.apache.org/schema/spring
http://camel.apache.org/schema/spring/camel-spring.xsd">

    <bean id="propertyPlaceholderConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:sql.properties</value>
            </list>
        </property>
    </bean>

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

   <!-- configure the Camel SQL component to use the JDBC data source -->
   <bean id="sql" class="org.apache.camel.component.sql.SqlComponent">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="initDatabase" class="com.invessence.eod.DatabaseBean"
          init-method="cleanTickerInformationTable" destroy-method="updatePriceBusinessDate">
        <property name="dataSource" ref="dataSource"/>
        <property name="updatePriceDateStoredProc" value="${sql.updatePriceDateStoredProcName}"/>
    </bean>

    <bean id="webFetch" class="com.invessence.eod.web.WebFetch"/>

    <camelContext id="camel-context" xmlns="http://camel.apache.org/schema/spring">
        <!-- use Camel property placeholder loaded from the given file -->
       <propertyPlaceholder id="placeholder" location="classpath:sql.properties"/>
        <route id="fetchTickerFromDB">
            <from uri="timer://runOnce?repeatCount=1"/>
            <to uri="sql:{{sql.selectTickers}}"/>
            <to uri="direct:fetchTickerInfo"/>
        </route>
        <route id="fetchTickerInfoFromWeb">
            <from uri="direct:fetchTickerInfo"/>
            <to uri="bean:webFetch?method=fetchTickerInfo"/>
            <to uri="direct:saveTickerInfoToDB"/>
        </route>
        <route id="persistTickerInfoToDB">
            <from uri="direct:saveTickerInfoToDB"/>
            <to uri="sql:{{sql.insertPrices}}?batch=true"/>
        </route>
    </camelContext>
</beans>