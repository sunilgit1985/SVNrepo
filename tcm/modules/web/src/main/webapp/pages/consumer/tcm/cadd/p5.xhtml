<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:p="http://primefaces.org/ui"
                xmlns:pe="http://primefaces.org/ui/extensions">


<script type="text/javascript">
    $(function ()
      {

          var chartValue = document.getElementById('ceForm:beanValueChart').value;
          //Fetched java beanValueChart in java script
          var maxGraghPlot = parseInt($.parseJSON(chartValue).maxGraghPlot);
          var maxGraghPlot1 = maxGraghPlot + 10000;
          var minGrowth = parseInt($.parseJSON(chartValue).minGrowth);

          var xCategories = $.parseJSON(chartValue).goalYearValue;

          $('#progressChart').highcharts(
                  {

                      title: {
                          text: ''
                      },
                      xAxis: {

                          // tickInterval: 'auto',
                          labels: {
                              formatter: function ()
                              {
                                  return xCategories[this.value];
                              },
                              pointStart: -1,
                              startOnTick: false,
                              endOnTick: false,
                              minPadding: 0,
                              maxPadding: 0,
                              rotation: 0,
                              align: 'center',
                              style: {
                                  fontSize: '10px',
                                  fontFamily: 'Verdana, sans-serif',
                                  fontWeight: 'bold',
                                  color: '#808080'

                              }
                          },
                      },
                      yAxis: {
                          //tickInterval: 'auto',//20000,
                          //minorTickInterval: 'auto',
                          min: minGrowth,
                          max: maxGraghPlot1,
                          lineWidth: 1,
                          //tickWidth: 1,
                          opposite: true,
                          title: {
                              text: '',
                              style: {
                                  fontSize: '10px',
                                  fontFamily: 'Verdana, sans-serif',
                                  fontWeight: 'bold',
                                  backgroundColor: '#808080'
                              }
                          },
                          labels: {
                              formatter: function ()
                              {
                                  return '$'
                                          + this.axis.defaultLabelFormatter
                                          .call(this);
                              },
                              style: {
                                  fontSize: '10px',
                                  fontFamily: 'Verdana, sans-serif',
                                  fontWeight: 'bold',
                                  color: '#808080'

                              }
                          },
                      },
                      legend: {

                          floating: false,
                          shadow: true,
                          enabled: true,
                      },
                      plotOptions: {
                          series: {
                              marker: {
                                  enabled: false
                              },
                              events: {
                                  legendItemClick: function ()
                                  {
                                      return false;
                                  }
                              }
                          }
                      },
                      credits: {
                          enabled: true
                      },
                      tooltip: {
                          style: {
                              fontSize: '10pt',
                              fontFamily: 'Verdana',
                          },
                          formatter: function ()
                          {

                              return 'Year : '
                                      + '<b>'
                                      + xCategories[this.x]
                                      + '</b>'
                                      + '<br/>'
                                      + ' Average Performance : '
                                      + '<b>'
                                      + '$'
                                      + Highcharts.numberFormat(this.point.y,
                                                                0, ',', ',') + '</b>';
                          },
                          crosshairs: true,
                          //shared: true,
                      },
                      exporting: {
                          enabled: false
                      },
                      series: [
                          {

                              name: 'Average market performance',
                              fontWeight: 'normal',
                              lineColor: '#4d0000',
                              color: '#4d0000',
                              type: 'spline',
                              zIndex: 3,
                              data: $.parseJSON(chartValue).goalAvgValue,
                              zIndex: 3,
                          },
                          {
                              name: '50% probability range',
                              fontWeight: 'normal',
                              data: $.parseJSON(chartValue).goalLowerValue,
                              type: 'areasplinerange',
                              lineWidth: 0,
                              color: '#54a685', //Highcharts.getOptions().colors[0]'', //#3498DB
                              //fillOpacity: 0.7,
                              border: 0,
                              zIndex: 2,
                              enableMouseTracking: false,
                          },
                          {
                              name: '95% probability range',
                              fontWeight: 'normal',
                              data: $.parseJSON(chartValue).goalUpperValue,
                              type: 'areasplinerange',
                              lineWidth: 0,
                              color: '#dbe6e0', //Highcharts.getOptions().colors[0],  //#ABEBC6
                              //fillOpacity: 0.7,
                              border: 0,
                              zIndex: 1,
                              enableMouseTracking: false,
                          },
                      ]
                  });

      });
    //
    <!--HighChart JS End  -->
</script>

<div class="Container100 TextAlCenter customRadioBlock">

    <h3 class="TexAlCenter StepsQuestionsFS">
        <!-- Assuming you invest for at least #{tcmpb.horizon} years, in the course of any given year,
        which of the below range of returns would be most acceptable to you?-->
        Below is a simulation of the possible performance ranges over time of
        5 hypothetical portfolios at differing levels of risk, comparing the
        5 options, which range of uncertainty best matches your comfort
        level?
    </h3>

    <div class="EmptyBox5"></div>
    <p:messages showDetail="false" sticky="true" escape="true"
                closable="true"/>

    <div class="EmptyBox5"></div>

    <!-- Projection Slab  -->
    <h:inputHidden value="#{tcmpb.riskCalculator.ans5}"
                   required="true"
                   requiredMessage="Please choose one appropriate investment strategy."/>
    <div class="ContainerDropDownSizing">
        <div class="ContainerPSlab-tcmUI MarAuto Fnone EnableDrodownProjection">
            <p:selectOneMenu styleClass="formpageDropdown FundAccountDropdownUI"
                             value="#{tcmpb.riskCalculator.ans5}"
                             style="width: 100%;">
                <p:ajax listener="#{tcmpb.doProjectionChart}"
                        update=":ceForm:inputArea"/>
                <f:selectItem itemLabel="Select Type" itemValue=""
                              noSelectionOption="true"/>
                <f:selectItem itemLabel="Aggressive (Higher Risk)" itemValue="5"/>
                <f:selectItem itemLabel="Moderately Aggressive" itemValue="4"/>
                <f:selectItem itemLabel="Moderate" itemValue="3"/>
                <f:selectItem itemLabel="Moderately Conservative" itemValue="2"/>
                <f:selectItem itemLabel="Conservative (Lower Risk)" itemValue="1"/>
            </p:selectOneMenu>
        </div>
    </div>

    <div class="Container30-tcmUI Fright PSlabPadding EnableProjectionSlab">
        <div class="Container30 FrightForced VerticalLine">
            <div class="FS15">Higher Risk</div>
            <div class="VerticalTriangleTop MarAuto"></div>
            <div class="PLine MarAuto"></div>
            <div class="VerticalTriangleBottom MarAuto"></div>
            <div class="FS15">Lower Risk</div>
        </div>
        <div class="Container70">
            <div class="EmptyBox5"></div>
            <p:commandLink actionListener="#{tcmpb.setAnswer5(5)}"
                           process="@this" styleClass="PSlabLink"
                           update=":ceForm:inputArea">
                <p:panel styleClass="PojectionSlabPanel">
                    <div class="#{tcmpb.getAns5Tag1(5)}"></div>
                    <div class="#{tcmpb.getAns5Tag2(5)}">
                        <span class="PSlabLabel">Aggressive</span>
                    </div>
                </p:panel>
            </p:commandLink>

            <div class="EmptyBox5"></div>
            <p:commandLink actionListener="#{tcmpb.setAnswer5(4)}"
                           process="@this" styleClass="PSlabLink"
                           update=":ceForm:inputArea">
                <p:panel styleClass="PojectionSlabPanel">
                    <div class="#{tcmpb.getAns5Tag1(4)}"></div>
                    <div class="#{tcmpb.getAns5Tag2(4)}">
                        <span class="PSlabLabel">Moderately Aggressive</span>
                    </div>
                </p:panel>
            </p:commandLink>

            <div class="EmptyBox5"></div>
            <p:commandLink actionListener="#{tcmpb.setAnswer5(3)}"
                           process="@this" styleClass="PSlabLink"
                           update=":ceForm:inputArea">
                <p:panel styleClass="PojectionSlabPanel">
                    <div class="#{tcmpb.getAns5Tag1(3)}"></div>
                    <div class="#{tcmpb.getAns5Tag2(3)}">
                        <span class="PSlabLabel">Moderate</span>
                    </div>
                </p:panel>
            </p:commandLink>

            <div class="EmptyBox5"></div>
            <p:commandLink actionListener="#{tcmpb.setAnswer5(2)}"
                           process="@this" styleClass="PSlabLink"
                           update=":ceForm:inputArea">
                <p:panel styleClass="PojectionSlabPanel">
                    <div class="#{tcmpb.getAns5Tag1(2)}"></div>
                    <div class="#{tcmpb.getAns5Tag2(2)}">
                        <span class="PSlabLabel">Moderately Conservative</span>
                    </div>
                </p:panel>
            </p:commandLink>

            <div class="EmptyBox5"></div>
            <p:commandLink actionListener="#{tcmpb.setAnswer5(1)}"
                           process="@this" styleClass="PSlabLink"
                           update=":ceForm:inputArea">
                <p:panel styleClass="PojectionSlabPanel">
                    <div class="#{tcmpb.getAns5Tag1(1)}"></div>
                    <div class="#{tcmpb.getAns5Tag2(1)}">
                        <span class="PSlabLabel">Conservative</span>
                    </div>
                </p:panel>
            </p:commandLink>
        </div>
    </div>
    <div class="Container70-tcmUI fleft">
        <div class="EmptyBox20"></div>
        <div class="Container100">
            <div class="Container45 Res100MP TexAlCenter Fleft UI-tcm">
                <div class="ContainerIndent">
                    <div class="EmptyBox5"></div>
							<span class="Fs14 DispBlock gray">Average Market
								Performance</span>

                    <div class="EmptyBox5"></div>
							<span class="Fs17 DispBlock BBGreen"> <h:outputText
                                    value="#{tcmpb.charts.avgPerformance}">
                                <f:convertNumber pattern="$#,###,###,##0"/>
                            </h:outputText>
							</span>
                </div>
            </div>

            <div class="Container45 Res100MP FrightForced TexAlCenter UI-tcm MarTopRes">
                <div class="ContainerIndent">
                    <div class="EmptyBox5"></div>
                    <span class="Fs14 DispBlock gray">Poor Market Performance</span>

                    <div class="EmptyBox5"></div>
							<span class="Fs17 DispBlock BBDarkGray"> <h:outputText
                                    value="#{tcmpb.charts.poorPerformance}">
                                <f:convertNumber pattern="$#,###,###,##0"/>
                            </h:outputText>
							</span>
                </div>
            </div>
        </div>
        <div class="EmptyBox5"></div>
        <h:inputHidden value="#{tcmpb.charts.resultChart}"
                       id="beanValueChart"/>

        <div id="progressChart" class="Conatiner100 customRadioGraph"></div>
    </div>
    <div class="EmptyBox20"></div>


    <div class="EmptyBox10"></div>
    <p:commandLink styleClass="UI-prevButton Fleft" value="Previous"
                   rendered="#{tcmpb.pagemanager.prevButtonStat}"
                   update=":ceForm:inputArea" immediate="true"
                   actionListener="#{tcmpb.prevPage}">
        <h:outputText value="Previous"/>
    </p:commandLink>

    <p:commandLink styleClass="UI-nextButton Fright UI-tcmButton"
                   value="Next" rendered="#{tcmpb.pagemanager.nextButtonStat}"
                   update=":ceForm:inputArea" actionListener="#{tcmpb.nextPage}">
        <h:outputText value="Next"/>
    </p:commandLink>
</div>
</ui:composition>