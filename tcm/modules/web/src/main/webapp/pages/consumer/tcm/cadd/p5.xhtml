<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:p="http://primefaces.org/ui"
                xmlns:pe="http://primefaces.org/ui/extensions">


    <script type="text/javascript">
        //<!--HighChart JS Started  -->
        $(function(){

            var chartValue = document.getElementById('ceForm:beanValueChart').value;
            //Fetched java beanValueChart in java script
            var maxGraghPlot = parseInt($.parseJSON(chartValue).maxGraghPlot);
            var maxGraghPlot1 = maxGraghPlot + 10000;
            var minGrowth = parseInt($.parseJSON(chartValue).minGrowth);

            var xCategories = $.parseJSON(chartValue).goalYearValue;

            $('#progressChart').highcharts({

                                               title: {text: ''},
                                               xAxis: {

                                                   // tickInterval: 'auto',
                                                   labels: {
                                                       formatter: function() {
                                                           return xCategories[this.value];
                                                       },
                                                       pointStart: -1,
                                                       startOnTick: false,
                                                       endOnTick: false,
                                                       minPadding: 0,
                                                       maxPadding: 0,
                                                       rotation: 0,
                                                       align: 'center',
                                                       style: {
                                                           fontSize: '10px',
                                                           fontFamily: 'Verdana, sans-serif',
                                                           fontWeight: 'bold',
                                                           color: '#808080'

                                                       }
                                                   },
                                               },
                                               yAxis: {
                                                   //tickInterval: 'auto',//20000,
                                                   //minorTickInterval: 'auto',
                                                   min: minGrowth,
                                                   max: maxGraghPlot1,
                                                   lineWidth: 1,
                                                   //tickWidth: 1,
                                                   opposite: true,
                                                   title: {
                                                       text: '',
                                                       style: {
                                                           fontSize: '10px',
                                                           fontFamily: 'Verdana, sans-serif',
                                                           fontWeight: 'bold',
                                                           backgroundColor:  '#808080'
                                                       }
                                                   },
                                                   labels: {
                                                       opposite: true,
                                                       formatter: function(){
                                                           if(this.value > maxGraghPlot1)
                                                           {
                                                               this.value=""
                                                           }else{
                                                               return '$'+this.value;
                                                           }
                                                       },
                                                       style: {
                                                           fontSize: '10px',
                                                           fontFamily: 'Verdana, sans-serif',
                                                           fontWeight: 'bold',
                                                           color:  '#808080'

                                                       }
                                                   }
                                               },
                                               legend: {

                                                   floating: false,
                                                   shadow: true,
                                                   enabled: true,
                                               },
                                               plotOptions: {
                                                   series: {
                                                       events: {
                                                           legendItemClick: function() {
                                                               return false;
                                                           }
                                                       }
                                                   }
                                               },
                                               credits: {
                                                   enabled: true
                                               },
                                               tooltip: {
                                                   style: {
                                                       fontSize: '10pt',
                                                       fontFamily: 'Verdana',
                                                   },
                                                   formatter: function() {

                                                       var point = this.point,

                                                               s = 'Year : '+'<b>'+xCategories[this.x]+'</b>'+'<br/>' +' Average Performance : '+'<b>'+'$'+ this.y+'</b>';

                                                       return s;
                                                   },
                                                   crosshairs: true,
                                                   //shared: true,
                                               },
                                               exporting: {
                                                   enabled: false
                                               },
                                               series: [{
                                                   marker: {
                                                       enabled: true
                                                   },
                                                   name: 'Average market performance',
                                                   fontWeight: 'normal',
                                                   lineColor: '#4d0000',
                                                   color: '#4d0000',
                                                   type: 'spline',
                                                   data: $.parseJSON(chartValue).goalAvgValue,
                                                   //Directly plot data series values

                                               }, {
                                                   name: '50% probability range',
                                                   fontWeight: 'normal',
                                                   data:$.parseJSON(chartValue).goalLowerValue,
                                                   type: 'areasplinerange',
                                                   lineWidth: 0,
                                                   color: '#5F5AE7', //Highcharts.getOptions().colors[0]'', //#3498DB
                                                   fillOpacity: 0.2,
                                                   border:0,
                                                   zIndex: 1,
                                               }, {
                                                   name: '95% probability range',
                                                   fontWeight: 'normal',
                                                   data: $.parseJSON(chartValue).goalUpperValue,
                                                   type: 'areasplinerange',
                                                   lineWidth: 0,
                                                   color: '#20F661', //Highcharts.getOptions().colors[0],  //#ABEBC6
                                                   fillOpacity: 0.2,
                                                   border:0,
                                                   zIndex: 1,
                                               },]
                                           });

        });

        //<!--HighChart JS End  -->
    </script>

    <div class="Container100 TextAlCenter">
        <h3 class="TexAlCenter StepsQuestionsFS">
            Assuming you invest for at least #{tcmpb.horizon} years, in the course of any given year,
            which of the below range of returns would be most acceptable to you?
        </h3>
        <p:messages showDetail="false" sticky="true" escape="true" closable="true"/>

        <div class="EmptyBox10"></div>

        <p:outputPanel id="goalPanel" deferred="true" style="background: transparent; border: 0px">
            <div class="Container100">
                <div class="Wid45 BorderedBox Fright TexAlCenter responsiveFullwidth UI-tcm">
                    <div class="ContainerIndent">
                        <div class="EmptyBox5"></div>
                        <span class="Fs14 DispBlock gray">Average Market Performance</span>
                                    <span class="Fs24 DispBlock green">
                                    <h:outputText value="#{tcmpb.charts.avgPerformance}">
                                        <f:convertNumber pattern="$#,###,###,##0"/>
                                    </h:outputText>
                                   </span>

                        <div class="EmptyBox5"></div>
                    </div>
                </div>
                <div class="Wid10 Fright" style="height:1px;"></div>
                <div class="Wid45 BorderedBox Fright TexAlCenter responsiveFullwidth UI-tcm">
                    <div class="ContainerIndent">
                        <div class="EmptyBox5"></div>
                        <span class="Fs14 DispBlock gray">Poor Market Performance</span>
                                    <span class="Fs24 DispBlock red">
                                      <h:outputText value="#{tcmpb.charts.poorPerformance}">
                                          <f:convertNumber pattern="$#,###,###,##0"/>
                                      </h:outputText>
                                     </span>

                        <div class="EmptyBox5"></div>
                    </div>
                </div>
            </div>

            <table class="Container100" style="border: 0px">
                <tr>
                    <td style="width: 100%; text-align: center">
                        <p:slider for="projection"
                                  minValue="1" maxValue="5">
                            <p:ajax event="slideEnd" listener="#{tcmpb.doProjectionChart}"
                                    update=":ceForm:goalPanel, :ceForm:beanValueChart" />
                        </p:slider>
                        <h:inputHidden id="projection" value="#{tcmpb.riskCalculator.ans5}"
                                       required="true"
                                       requiredMessage="Please use the slider below to select appropriate investment"/>

                    </td>

                </tr>

                <tr>
                    <td>
                        <div class="TexAlCenter StepsQuestionsFS">
                            Please slide the dot to the select appropriate investment.
                        </div>
                    </td>
                </tr>
            </table>
        </p:outputPanel>

        <!-- Projection HighChart start  -->
        <p:panel update="beanValueChart" action="#{tcmpb.doProjectionChart}" />
        <h:inputHidden value="#{tcmpb.charts.resultChart}" id="beanValueChart"  />

        <div id="progressChart" style="width: 100%; height: 500px"></div>
        <!-- Projection HighChart end  -->

        <div class="EmptyBox10"></div>
        <p:commandButton styleClass="prev" value="Previous" rendered="#{tcmpb.pagemanager.prevButtonStat}"
                         update=":ceForm:inputArea"
                         immediate="true"
                         actionListener="#{tcmpb.prevPage}"/>
        <p:commandButton styleClass="Fright UI-tcmButton" value="Next"  rendered="#{tcmpb.pagemanager.nextButtonStat}"
                         update=":ceForm:inputArea"
                         actionListener="#{tcmpb.nextPage}"/>
    </div>
</ui:composition>